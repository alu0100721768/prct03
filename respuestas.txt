18. Escriba el programa que muestra por la consola la frase "Hola Mundo". ¿Que significado tiene la salida? (puts ’Hola Mundo’)

Que no devuelve ningun valor.

21. ¿Que diferencia hay entre "\t\n" y ’\t\n’?

"\t\n" : Interpreta no solo el texto sino tambien los comandos.
’\t\n’ : Se lee todo como texto unicamente.


22. ¿Como funciona %q? ¿Que es %q{hello world\n}? ¿Que es 
%q{’a’ ’b’’c’}?

Como un string con comillas simples.
 
23. ¿Como funciona %Q? ¿Que es %Q{hello world\n}? ¿Que es %Q{"a" "b" "c"}?

Como un string con comillas dobles.

24. ¿Que queda en c?

irb(main):001:0> a = 4
=> 4
irb(main):002:0> b =2
=> 2
irb(main):003:0> c = <<HERE
irb(main):004:0" --#{a}--
irb(main):005:0" --#{b}--
irb(main):006:0" HERE

La salida "--4--\n--2--\n"

25. ¿Que queda en c?

irb(main):001:0> a = 4
=> 4
irb(main):002:0> b =2
=> 2
irb(main):008:0> c = <<’HERE’
irb(main):009:0’ --#{a}--
irb(main):010:0’ --#{b}--
irb(main):011:0’ HERE

La salida "--\#{a}--\n--\#{b}--\n"

26. s = "hello". ¿Cual es el valor de las siguientes expresiones?

s[0,2]  "he"
s[-1,1] "o"
s[0,10] "hello"

27. ¿Que queda en g?

>> g = "hello"
=> "hello"
>> g << " world"

Concadena las dos palabras hello world.

28. ¿Que queda en e?

>> e = ’.’*3

"..."

29. ¿Cual es el resultado?

>> a = 1
=> 1
>> "#{a=a+1} "*3

"2 2 2 "

30. ¿QuE es esto? %w[this is a test]

["this", "is", "a", "test"] Separa el array con dobles comillas por cada palabra.

31. ¿Que es esto? %w[\t \n]

["\\t", "\\n"] Igual que arriba

32. ¿Que es esto? %W[\t \n]

["\t", "\n"]

33. ¿Que contiene nils? nils = Array.new(3)

[nil, nil, nil]

34. ¿Qu ́ contiene zeros? zeros = Array.new(3, 0)

[0, 0, 0]

35. ¿Que queda en b?

>> x = [[1,2],[3,4]]
=> [[1, 2], [3, 4]]
>> b = Array.new(x)

[[1, 2], [3, 4]]

36. ¿Que queda en c?

>> c = Array.new(3) { |i| 2*i }

[0, 2, 4]

37. ¿Cual es el resultado de cada una de estas operaciones?

>> a = (’a’..’e’).to_a
=> ["a", "b", "c", "d", "e"]
>> a[1,1]
=> ["b"]
>> a[-2,2]
=> ["d", "e"]
>> a[0..2]
=> ["a", "b", "c"]
>> a[0...1]
=> ["a"]
>> a[-2..-1]
=> ["d", "e"]

38. ¿Cual es el resultado de cada una de estas operaciones?

>> a
=> ["a", "b", "c", "d", "e"]
>> a[0,2] = %w{A B}
=> ["A", "B"]
>> a
=> ["A", "B", "c", "d", "e"]
>> a[2..5] = %w{C D E}
=> ["C", "D", "E"]
>> a
=> ["A", "B", "c", "d", "e"]
>> a[0,0] = [1,2,3]
=> [1, 2, 3]
>> a
=> ["A", "B", "c", "d", "e"]
>> a[0,2] = []
=> []
>> a 
=> [1, 2, 3, "A", "B", "C", "D", "E"]
>> a[-1,1] = [ ’Z’ ]
=> ["Z"]
>> a
=> [3, "A", "B", "C", "D", "E"] 
>> a[-2,2] = nil
=> nil
>> a
=> [3, "A", "B", "C", nil]

39. ¿Cual es el resultado de cada una de estas operaciones?

>> a = (1...4).to_a
=> [1, 2, 3]
>> a = a + [4, 5]
=> [1, 2, 3, 4, 5]
>> a += [[6, 7, 8]]
=> [1, 2, 3, 4, 5, [6, 7, 8]]
>> a = a + 9
=> error ( para que funcione faltan [])

40. ¿Cual es el resultado de cada una de estas operaciones?

>> x = %w{a b c b a}
=> ["a", "b", "c", "b", "a"]
>> x = x - %w{b c d}
=> ["a", "a"]










































 

